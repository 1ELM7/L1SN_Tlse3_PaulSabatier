Énoncé
L'objectif de cet exercice est de mettre en oeuvre l'algorithme de tri rapide sur une liste chaînée. Le tri rapide adopte la stratégie diviser pour régner : étant donnée une liste d’éléments à trier, le principe de l’algorithme est le suivant :

Partition de la liste en utilisant la méthode du pivot : on obtient deux sous-listes (valeurs inférieures/supérieures au pivot).
Tri rapide de chacune des deux sous-listes : on obtient deux sous-listes triées.
Concaténation des deux sous-listes ainsi triées en une seule liste triée (on intercale le pivot entre les deux sous-listes triées).
Le tri rapide est un algorithme de tri très utilisé pour sa relative simplicité et sa rapidité.

Travail à effectuer :

Écrire la fonction récursive partitionner_pivot qui accepte en paramètres une liste chaînée ainsi qu'un entier pivot et retourne le tuples (liste_inf,liste_sup), où liste_inf est composée des éléments de la liste inférieurs ou égaux à pivot et liste_sup des éléments strictement supérieurs à pivot.
Écrire la fonction récursive concatener_listes qui accepte en paramètre deux listes chaînées et retourne le résultat de la concaténation de ces deux listes.
Écrire la fonction récursive tri_rapide qui accepte en paramètre une liste chaînée et retourne cette liste chaînée triée.
Écrire le programme qui saisit une liste (avec eval(input())) et affiche le résultat retourné par la fonction tri_rapide.

Entrée du programme
Une liste d'entiers (implémentée avec des tuples).

Sortie du programme
Une liste d'entiers.
